# AWS Well-Architected EKS Cluster Configuration Example
# Copy this file to terraform.tfvars and modify the values as needed

# AWS Region
region = "ap-northeast-2"

# EKS Cluster Configuration
cluster_name    = "well-architected-eks"
cluster_version = "1.31"

# VPC Configuration
vpc_cidr = "10.0.0.0/16"
azs      = ["ap-northeast-2a", "ap-northeast-2b", "ap-northeast-2c"]

private_subnets = ["10.0.1.0/24", "10.0.2.0/24", "10.0.3.0/24"]
public_subnets  = ["10.0.101.0/24", "10.0.102.0/24", "10.0.103.0/24"]

# EKS Node Groups Configuration
node_groups = {
  # General purpose node group
  general = {
    instance_types = ["t3.medium"]
    capacity_type  = "ON_DEMAND"
    min_size       = 1
    max_size       = 3
    desired_size   = 2
  }
  
  # Spot instance node group for cost optimization
  spot = {
    instance_types = ["t3.medium", "t3.large"]
    capacity_type  = "SPOT"
    min_size       = 0
    max_size       = 5
    desired_size   = 1
  }
  
  # Compute optimized node group for high-performance workloads
  compute = {
    instance_types = ["c5.large"]
    capacity_type  = "ON_DEMAND"
    min_size       = 0
    max_size       = 2
    desired_size   = 0
  }
}

# Resource Tags
tags = {
  Environment = "production"
  Project     = "well-architected-eks"
  Owner       = "platform-team"
  CostCenter  = "engineering"
  ManagedBy   = "terraform"
  
  # Additional tags for compliance
  Compliance  = "cis-benchmark"
  Monitoring  = "enabled"
  Backup      = "required"
}